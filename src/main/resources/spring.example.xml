<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						">
	<description>spring配置文件整合jdb-orm配置实例</description>
	
	<!-- 
		获取SessionFactoryRegister的方式 
			com.douglei.orm.spring.SessionFactoryRegisterHolder, 直接调用该类的静态方法 getSessionFactoryRegister()
	-->
	
	<!-- 配置数据源, 获取SessionFactoryHandlerHolder实例 -->
	<bean id="sessionFactoryHandlerHolder" class="com.douglei.orm.spring.SessionFactoryRegisterHolder" scope="singleton"><!-- 必须配置 -->
		<property name="defaultSessionFactoryConfigurationFile" value="jdb-orm.conf.xml"></property><!-- 必须配置 -->
		
		<!-- 配置多数据源, 非必须配置 -->
		<property name="sessionFactoryConfigurationFiles">
			<array>
				<value>xxx.xml</value>
				<value>xxx.xml</value>
			</array>
		</property>
	</bean>
	
	<!-- 配置扫务组件的注册器实例 -->
	<bean id="transactionComponentRegistry" class="com.douglei.orm.spring.TransactionComponentRegistry" scope="singleton"><!-- 必须配置 -->
		<!-- 是否扫描所有符合添加的包, 不论是否在jar包中, 默认为false -->
		<property name="searchAllPath" value="false"></property>
		<!-- 指定要扫描的base package路径 -->
		<property name="transactionComponentPackages"><!-- 必须配置 -->
			<array>
				<value>com.douglei.services</value>
				<value>com.douglei.xxx.services</value>
			</array>
		</property>
	</bean>
	
	<!-- 配置销毁ProxyBeanContext的监听器 -->
	<bean id="destroyProxyBeanContextListener" class="com.douglei.orm.spring.DestroyProxyBeanContextListener" />
</beans>