<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						">
	<description>spring配置文件整合jdb-orm配置实例</description>
	
	<!-- 配置数据源, 这里不在举例 -->
	<bean id="dataSource" class=""></bean>
	
	<!-- 配置映射缓存存储, 或自己扩展再配置进来 -->
	<bean id="application" class="com.douglei.orm.configuration.environment.mapping.cache.store.impl.ApplicationMappingCacheStore"></bean>
	
	<!-- 必须配置, 配置默认的数据源配置实例 -->
	<bean id="defaultConfiguration" class="com.douglei.orm.spring.ConfigurationWrapper" scope="prototype">
		<property name="configurationFile" value="jdb-orm.conf.xml"></property><!-- 必须配置 -->
		<property name="dataSource" ref="dataSource"></property><!-- 可以不配置, 在jdb-orm中配置数据源 -->
		<property name="mappingCacheStore" ref="application"></property><!-- 可以不配置 -->
	</bean>
	
	<!-- 多数据源也需要配置com.douglei.orm.spring.ConfigurationWrapper, 配置的方式和上面一致 -->
	<bean id="multiConfiguration1" class="com.douglei.orm.spring.ConfigurationWrapper" scope="prototype">
		<property name="configurationFile" value="xxxx.xml"></property><!-- 必须配置 -->
		<property name="dataSource" ref="dataSource"></property><!-- 可以不配置, 在jdb-orm中配置数据源 -->
		<property name="mappingCacheStore" ref="application"></property><!-- 可以不配置 -->
	</bean>
	
	
	<!-- 必须配置, 配置sessionFactory注册器实例, 单例 -->
	<bean id="sessionFactoryRegister" class="com.douglei.orm.context.SessionFactoryRegister" scope="singleton" />
	<!-- 配置数据源, 获取SessionFactoryHandlerHolder实例 -->
	<bean id="sessionFactoryHandlerHolder" class="com.douglei.orm.spring.SessionFactoryRegisterHolder" scope="singleton"><!-- 必须配置 -->
		<property name="sessionFactoryRegister" ref="sessionFactoryRegister"></property><!-- 必须配置 -->
		<property name="defaultSessionFactory" value="defaultConfiguration"></property><!-- 必须配置 -->
		
		<!-- 配置多数据源, 非必须配置 -->
		<property name="sessionFactorys">
			<array>
				<ref bean="multiConfiguration1"/>
				<!-- 其他配置 -->
			</array>
		</property>
	</bean>
	
	
	<!-- 配置扫务组件的注册器实例 -->
	<bean id="transactionComponentRegistry" class="com.douglei.orm.spring.TransactionComponentRegistry" scope="singleton"><!-- 必须配置 -->
		<!-- 是否扫描所有符合添加的包, 不论是否在jar包中, 默认为false -->
		<property name="searchAll" value="false"></property>
		<!-- 指定要扫描的base package路径 -->
		<property name="transactionComponentPackages"><!-- 必须配置 -->
			<array>
				<value>com.douglei.services</value>
				<value>com.douglei.xxx.services</value>
			</array>
		</property>
	</bean>
	
	<!-- 配置销毁ProxyBeanContext的监听器 -->
	<bean id="destroyProxyBeanContextListener" class="com.douglei.orm.spring.DestroyProxyBeanContextListener" />
</beans>